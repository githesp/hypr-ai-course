[project]
name = "config-service"
version = "0.1.0"
description = "HTTP API service for centralized configuration management"
authors = [
    {name = "Platform Team", email = "platform@example.com"}
]
readme = "../README.md"
requires-python = ">=3.13"
dependencies = [
    "fastapi==0.116.1",
    "uvicorn[standard]==0.32.1",
    "pydantic==2.11.7",
    "pydantic-settings>=2.0.0,<3.0.0",
    "pydantic-extra-types>=2.0.0,<3.0.0",
    "python-ulid>=2.0.0,<3.0.0",
    "psycopg2-binary>=2.9.0,<3.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest==8.4.1",
    "pytest-asyncio==0.25.0",
    "ruff==0.12.7",
    "mypy==1.17.1",
    "httpx==0.28.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.ruff]
target-version = "py313"
line-length = 100

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pytest.ini_options]
testpaths = ["api"]
python_files = ["*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"

[dependency-groups]
dev = [
    "httpx>=0.28.1",
    "pytest>=8.4.1",
    "pytest-asyncio>=0.25.0",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.7",
]
